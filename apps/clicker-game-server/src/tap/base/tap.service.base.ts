/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Tap as PrismaTap } from "@prisma/client";

export class TapServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TapCountArgs, "select">): Promise<number> {
    return this.prisma.tap.count(args);
  }

  async taps(args: Prisma.TapFindManyArgs): Promise<PrismaTap[]> {
    return this.prisma.tap.findMany(args);
  }
  async tap(args: Prisma.TapFindUniqueArgs): Promise<PrismaTap | null> {
    return this.prisma.tap.findUnique(args);
  }
  async createTap(args: Prisma.TapCreateArgs): Promise<PrismaTap> {
    return this.prisma.tap.create(args);
  }
  async updateTap(args: Prisma.TapUpdateArgs): Promise<PrismaTap> {
    return this.prisma.tap.update(args);
  }
  async deleteTap(args: Prisma.TapDeleteArgs): Promise<PrismaTap> {
    return this.prisma.tap.delete(args);
  }
}
