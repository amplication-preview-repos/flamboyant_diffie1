/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  MaxLength,
  IsInt,
  Min,
  Max,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { ClubUpdateManyWithoutPlayersInput } from "./ClubUpdateManyWithoutPlayersInput";
import { Type } from "class-transformer";
import { FriendUpdateManyWithoutPlayersInput } from "./FriendUpdateManyWithoutPlayersInput";

@InputType()
class PlayerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  coins?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  energyRechargeRate?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  tapValue?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  energy?: number | null;

  @ApiProperty({
    required: false,
    type: () => ClubUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => ClubUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => ClubUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  clubs?: ClubUpdateManyWithoutPlayersInput;

  @ApiProperty({
    required: false,
    type: () => FriendUpdateManyWithoutPlayersInput,
  })
  @ValidateNested()
  @Type(() => FriendUpdateManyWithoutPlayersInput)
  @IsOptional()
  @Field(() => FriendUpdateManyWithoutPlayersInput, {
    nullable: true,
  })
  friends?: FriendUpdateManyWithoutPlayersInput;
}

export { PlayerUpdateInput as PlayerUpdateInput };
